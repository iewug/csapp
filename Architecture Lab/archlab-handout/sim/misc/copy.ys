# Y86-64 for copy_block
    .pos 0
    irmovq stack, %rsp
    call main
    halt


    .align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333


main:
    irmovq  src, %rdi
    irmovq  dest, %rsi
    irmovq  $0x3, %rdx
    call    copy_block
    ret


copy_block:
    pushq   %r12
    pushq   %r13
    pushq   %r14
    irmovq  $0x1, %r12
    irmovq  $0x8, %r13
    irmovq  $0x0, %rax
    jmp     test
loop:
    mrmovq  0x0(%rdi), %r14
    addq    %r13, %rdi
    rmmovq  %r14, 0x0(%rsi)
    addq    %r13, %rsi
    xorq    %r14, %rax
    subq    %r12, %rdx
test:
    andq    %rdx, %rdx
    jg      loop
    popq    %r14
    popq    %r13
    popq    %r12
    ret
    

	.pos 0x100
stack:
